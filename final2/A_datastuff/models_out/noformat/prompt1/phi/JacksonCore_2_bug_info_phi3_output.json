{
  "bug_id": "JacksonCore_2_bug_info",
  "results": [
    {
      "prompt_index": 1,
      "prompt": "Bug ID: 2\nTest Class: com.fasterxml.jackson.core.json.TestParserErrorHandling\nMethod: testMangledNumbersBytes\nError: junit.framework.AssertionFailedError\nMessage: Should have gotten an exception; instead got token: VALUE_NUMBER_INT\nFailing Line:         _testMangledNumbers(true);\nTest Source:\npublic void testMangledNumbersBytes() throws Exception {\n  _testMangledNumbers(true);\n  }\nStack Trace:\nTestParserErrorHandling._testMangledNumbers line 93, TestParserErrorHandling.testMangledNumbersBytes line 22\n\nMethod: testMangledNumbersChars\nError: junit.framework.AssertionFailedError\nMessage: Should have gotten an exception; instead got token: VALUE_NUMBER_INT\nFailing Line:         _testMangledNumbers(false);\nTest Source:\npublic void testMangledNumbersChars() throws Exception {\n  _testMangledNumbers(false);\n  }\nStack Trace:\nTestParserErrorHandling._testMangledNumbers line 93, TestParserErrorHandling.testMangledNumbersChars line 26\n\nReturn **only** the fully-qualified Java *source* class that contains the bug.\nDo **not** return:\n- the test class itself (e.g. com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeIdWithEnum1328Test),\n- any class whose simple name starts or ends with Test, Tests, TestUtil, TestUtils, or TestHelper,\n- any test-utility class such as org.junit.Assert or org.junit.jupiter.api.Assertions.\nOutput just the class name on a single line - nothing else in this format:\nRESPONSE: <fully-qualified-class-name>\n",
      "response": "Input:\nTestParserErrorHandling.java\nimport org.junit.jupiter.api.Test;\n\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.node.ArrayNode;\nimport com.fasterxml.jackson.databind.node.ObjectNode;\nimport com.fasterxml.jackson.databind.type.TypeFactory;\nimport com.fasterxml.jackson.databind.type.TypeIdResolver;\nimport com.fasterxml.jackson.databind.type.impl.ArrayTypeIdResolver;\nimport com.fasterxml.jackson.databind.type.impl.ArrayTypeIdFactory;\n\nimport java.io.IOException;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\npublic class TestParserErrorHandling {\n\n    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n\n    private static final ObjectNode NODE = OBJECT_MAPPER.createObjectNode();\n\n    private static final ObjectNode NODE_INT = OBJECT_MAPPER.createObjectNode();\n\n    private static final ObjectNode NODE_STRING = OBJECT_MAPPER.createObjectNode();\n\n    private static final ObjectNode NODE_NULL = OBJECT_MAPPER.createObjectNode();\n\n    private static final ObjectNode NODE_ARRAY_INT = OBJECT_MAPPER.createArrayNode();\n\n    private static final ObjectNode NODE_ARRAY_STRING = OBJECT_MAPPER.createArrayNode();\n\n    private static final ObjectNode NODE_ARRAY_NULL = OBJECT_MAPPER.createArrayNode();\n\n    private static final ArrayTypeIdResolver TYPE_ID_RESOLVER = new ArrayTypeIdResolver(\n            new ArrayTypeIdFactory(\n                    new ArrayTypeIdFactory.IntTypeIdFactory()\n            )\n    );\n\n    private static final TypeFactory TYPE_FACTORY = TypeFactory.defaultInstance();\n\n    private static final TypeIdResolver TYPE_ID_RESOLVER_INT = new"
    }
  ],
  "classes": [
    "ReaderBasedJsonParser",
    "UTF8StreamJsonParser"
  ]
}