{
  "bug_id": "97",
  "failed_tests": {
    "com.fasterxml.jackson.databind.node.POJONodeTest": [
      {
        "methodName": "testPOJONodeCustomSer",
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...Str\":\"The value is: [Hello!]\"}}> but was:<...Str\":\"The value is: [NULL]\"}}>",
        "fail_line": "      assertEquals(EXP, treeOut);",
        "test_source": "  public void testPOJONodeCustomSer() throws Exception {\n  Data data = new Data();\n  data.aStr = \"Hello\";\n\n  Map<String, Object> mapTest = new HashMap<>();\n  mapTest.put(\"data\", data);\n\n  ObjectNode treeTest = MAPPER.createObjectNode();\n  treeTest.putPOJO(\"data\", data);\n\n  final String EXP = \"{\\\"data\\\":{\\\"aStr\\\":\\\"The value is: Hello!\\\"}}\";\n  \n  String mapOut = MAPPER.writer().withAttribute(\"myAttr\", \"Hello!\").writeValueAsString(mapTest);\n  assertEquals(EXP, mapOut);\n\n  String treeOut = MAPPER.writer().withAttribute(\"myAttr\", \"Hello!\").writeValueAsString(treeTest);\n  assertEquals(EXP, treeOut);\n  }",
        "stack": [
          "POJONodeTest.testPOJONodeCustomSer line 53"
        ]
      }
    ]
  },
  "classes": [
    {
      "name": "com/fasterxml/jackson/databind/node/POJONode.java",
      "buggy_full_code": "package com.fasterxml.jackson.databind.node;\n\nimport java.io.IOException;\n\nimport com.fasterxml.jackson.core.*;\nimport com.fasterxml.jackson.databind.JsonSerializable;\nimport com.fasterxml.jackson.databind.SerializerProvider;\nimport com.fasterxml.jackson.databind.util.RawValue;\n\n\npublic class POJONode extends ValueNode { protected final Object _value; public POJONode(Object v) { _value = v; }\n\n    \n\n    @Override\n    public JsonNodeType getNodeType() {\n        return JsonNodeType.POJO;\n    }\n\n    @Override public JsonToken asToken() { return JsonToken.VALUE_EMBEDDED_OBJECT; }\n\n    \n    @Override\n    public byte[] binaryValue() throws IOException {\n        if (_value instanceof byte[]) {\n            return (byte[]) _value;\n        }\n        return super.binaryValue();\n    }\n    \n    \n\n    @Override\n    public String asText() { return (_value == null) ? \"null\" : _value.toString(); }\n\n    @Override public String asText(String defaultValue) {\n        return (_value == null) ? defaultValue : _value.toString();\n    }\n    \n    @Override\n    public boolean asBoolean(boolean defaultValue) {\n        if (_value != null && _value instanceof Boolean) {\n            return ((Boolean) _value).booleanValue();\n        }\n        return defaultValue;\n    }\n    \n    @Override\n    public int asInt(int defaultValue) {\n        if (_value instanceof Number) {\n            return ((Number) _value).intValue();\n        }\n        return defaultValue;\n    }\n\n    @Override\n    public long asLong(long defaultValue) {\n        if (_value instanceof Number) {\n            return ((Number) _value).longValue();\n        }\n        return defaultValue;\n    }\n    \n    @Override\n    public double asDouble(double defaultValue) {\n        if (_value instanceof Number) {\n            return ((Number) _value).doubleValue();\n        }\n        return defaultValue;\n    }\n    \n    \n\n    @Override\n    public final void serialize(JsonGenerator gen, SerializerProvider ctxt) throws IOException {\n        if (_value == null) {\n            ctxt.defaultSerializeNull(gen);\n        } else if (_value instanceof JsonSerializable) {\n            ((JsonSerializable) _value).serialize(gen, ctxt);\n        } else {\n            \n            \n            gen.writeObject(_value);\n        }\n    }\n\n    \n\n    \n    public Object getPojo() { return _value; }\n\n    \n\n    @Override\n    public boolean equals(Object o) {\n        if (o == this) return true;\n        if (o == null) return false;\n        if (o instanceof POJONode) {\n            return _pojoEquals((POJONode) o);\n        }\n        return false;\n    }\n\n    \n    protected boolean _pojoEquals(POJONode other) {\n        if (_value == null) {\n            return other._value == null;\n        }\n        return _value.equals(other._value);\n    }\n    \n    @Override\n    public int hashCode() { return _value.hashCode(); }\n\n    @Override\n    public String toString() {\n        \n        if (_value instanceof byte[]) {\n            return String.format(\"(binary value of %d bytes)\", ((byte[]) _value).length);\n        }\n        if (_value instanceof RawValue) {\n            return String.format(\"(raw value '%s')\", ((RawValue) _value).toString());\n        }\n        return String.valueOf(_value);\n    }\n}\n",
      "fixed_full_code": "package com.fasterxml.jackson.databind.node;\n\nimport java.io.IOException;\n\nimport com.fasterxml.jackson.core.*;\nimport com.fasterxml.jackson.databind.JsonSerializable;\nimport com.fasterxml.jackson.databind.SerializerProvider;\nimport com.fasterxml.jackson.databind.util.RawValue;\n\n\npublic class POJONode extends ValueNode { protected final Object _value; public POJONode(Object v) { _value = v; }\n\n    \n\n    @Override\n    public JsonNodeType getNodeType() {\n        return JsonNodeType.POJO;\n    }\n\n    @Override public JsonToken asToken() { return JsonToken.VALUE_EMBEDDED_OBJECT; }\n\n    \n    @Override\n    public byte[] binaryValue() throws IOException {\n        if (_value instanceof byte[]) {\n            return (byte[]) _value;\n        }\n        return super.binaryValue();\n    }\n    \n    \n\n    @Override\n    public String asText() { return (_value == null) ? \"null\" : _value.toString(); }\n\n    @Override public String asText(String defaultValue) {\n        return (_value == null) ? defaultValue : _value.toString();\n    }\n    \n    @Override\n    public boolean asBoolean(boolean defaultValue) {\n        if (_value != null && _value instanceof Boolean) {\n            return ((Boolean) _value).booleanValue();\n        }\n        return defaultValue;\n    }\n    \n    @Override\n    public int asInt(int defaultValue) {\n        if (_value instanceof Number) {\n            return ((Number) _value).intValue();\n        }\n        return defaultValue;\n    }\n\n    @Override\n    public long asLong(long defaultValue) {\n        if (_value instanceof Number) {\n            return ((Number) _value).longValue();\n        }\n        return defaultValue;\n    }\n    \n    @Override\n    public double asDouble(double defaultValue) {\n        if (_value instanceof Number) {\n            return ((Number) _value).doubleValue();\n        }\n        return defaultValue;\n    }\n    \n    \n\n    @Override\n    public final void serialize(JsonGenerator gen, SerializerProvider ctxt) throws IOException {\n        if (_value == null) {\n            ctxt.defaultSerializeNull(gen);\n        } else if (_value instanceof JsonSerializable) {\n            ((JsonSerializable) _value).serialize(gen, ctxt);\n        } else {\n            \n            \n            ctxt.defaultSerializeValue(_value, gen);\n        }\n    }\n\n    \n\n    \n    public Object getPojo() { return _value; }\n\n    \n\n    @Override\n    public boolean equals(Object o) {\n        if (o == this) return true;\n        if (o == null) return false;\n        if (o instanceof POJONode) {\n            return _pojoEquals((POJONode) o);\n        }\n        return false;\n    }\n\n    \n    protected boolean _pojoEquals(POJONode other) {\n        if (_value == null) {\n            return other._value == null;\n        }\n        return _value.equals(other._value);\n    }\n    \n    @Override\n    public int hashCode() { return _value.hashCode(); }\n\n    @Override\n    public String toString() {\n        \n        if (_value instanceof byte[]) {\n            return String.format(\"(binary value of %d bytes)\", ((byte[]) _value).length);\n        }\n        if (_value instanceof RawValue) {\n            return String.format(\"(raw value '%s')\", ((RawValue) _value).toString());\n        }\n        return String.valueOf(_value);\n    }\n}\n",
      "buggy_signatures": [
        "public class POJONode extends ValueNode { protected final Object _value; public POJONode(Object v)",
        "public JsonNodeType getNodeType()",
        "public JsonToken asToken()",
        "public byte[] binaryValue() throws IOException",
        "public String asText()",
        "public String asText(String defaultValue)",
        "public boolean asBoolean(boolean defaultValue)",
        "public int asInt(int defaultValue)",
        "public long asLong(long defaultValue)",
        "public double asDouble(double defaultValue)",
        "public final void serialize(JsonGenerator gen, SerializerProvider ctxt) throws IOException",
        "public Object getPojo()",
        "public boolean equals(Object o)",
        "protected boolean _pojoEquals(POJONode other)",
        "public int hashCode()",
        "public String toString()"
      ],
      "fixed_signatures": [
        "public class POJONode extends ValueNode { protected final Object _value; public POJONode(Object v)",
        "public JsonNodeType getNodeType()",
        "public JsonToken asToken()",
        "public byte[] binaryValue() throws IOException",
        "public String asText()",
        "public String asText(String defaultValue)",
        "public boolean asBoolean(boolean defaultValue)",
        "public int asInt(int defaultValue)",
        "public long asLong(long defaultValue)",
        "public double asDouble(double defaultValue)",
        "public final void serialize(JsonGenerator gen, SerializerProvider ctxt) throws IOException",
        "public Object getPojo()",
        "public boolean equals(Object o)",
        "protected boolean _pojoEquals(POJONode other)",
        "public int hashCode()",
        "public String toString()"
      ],
      "methods": [
        {
          "buggy_method": "  public final void serialize(JsonGenerator gen, SerializerProvider ctxt) throws IOException {\n  if (_value == null) {\n  ctxt.defaultSerializeNull(gen);\n  } else if (_value instanceof JsonSerializable) {\n  ((JsonSerializable) _value).serialize(gen, ctxt);\n  } else {\n  \n  \n  gen.writeObject(_value);\n  }\n  }",
          "fixed_method": "  public final void serialize(JsonGenerator gen, SerializerProvider ctxt) throws IOException {\n  if (_value == null) {\n  ctxt.defaultSerializeNull(gen);\n  } else if (_value instanceof JsonSerializable) {\n  ((JsonSerializable) _value).serialize(gen, ctxt);\n  } else {\n  \n  \n  ctxt.defaultSerializeValue(_value, gen);\n  }\n  }",
          "diff": [
            "@@ -111,7 +111,7 @@",
            "         } else {\n",
            "             // 25-May-2018, tatu: [databind#1991] do not call via generator but through context;\n",
            "             //    this to preserve contextual information\n",
            "-            gen.writeObject(_value);\n",
            "+            ctxt.defaultSerializeValue(_value, gen);\n",
            "         }\n",
            "     }\n",
            " \n"
          ],
          "changed_lines": 2
        }
      ]
    }
  ]
}
