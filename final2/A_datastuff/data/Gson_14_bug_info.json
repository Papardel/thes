{
  "bug_id": "14",
  "failed_tests": {
    "com.google.gson.internal.bind.RecursiveTypesResolveTest": [
      {
        "methodName": "testDoubleSupertype",
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<? super java.lang.Number> but was:<? super ? super java.lang.Number>",
        "fail_line": "    assertEquals($Gson$Types.supertypeOf(Number.class),",
        "test_source": "  public void testDoubleSupertype() {\n  assertEquals($Gson$Types.supertypeOf(Number.class),\n  $Gson$Types.supertypeOf($Gson$Types.supertypeOf(Number.class)));\n  }",
        "stack": [
          "RecursiveTypesResolveTest.testDoubleSupertype line 71"
        ]
      },
      {
        "methodName": "testIssue440WeakReference",
        "error": "java.lang.StackOverflowError",
        "message": "",
        "fail_line": "",
        "test_source": "  public void testIssue440WeakReference() throws Exception {\n  TypeAdapter<WeakReference> adapter = new Gson().getAdapter(WeakReference.class);\n  assertNotNull(adapter);\n  }",
        "stack": [
          "$Gson$Types.getGenericSupertype line 238, $Gson$Types.resolveTypeVariable line 408, $Gson$Types.resolve line 333, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 362, ReflectiveTypeAdapterFactory.getBoundFields line 158, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100"
        ]
      },
      {
        "methodName": "testSubSupertype",
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<?> but was:<? extends ? super java.lang.Number>",
        "fail_line": "    assertEquals($Gson$Types.subtypeOf(Object.class),",
        "test_source": "  public void testSubSupertype() {\n  assertEquals($Gson$Types.subtypeOf(Object.class),\n  $Gson$Types.subtypeOf($Gson$Types.supertypeOf(Number.class)));\n  }",
        "stack": [
          "RecursiveTypesResolveTest.testSubSupertype line 86"
        ]
      },
      {
        "methodName": "testDoubleSubtype",
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<? extends java.lang.Number> but was:<? extends ? extends java.lang.Number>",
        "fail_line": "    assertEquals($Gson$Types.subtypeOf(Number.class),",
        "test_source": "  public void testDoubleSubtype() {\n  assertEquals($Gson$Types.subtypeOf(Number.class),\n  $Gson$Types.subtypeOf($Gson$Types.subtypeOf(Number.class)));\n  }",
        "stack": [
          "RecursiveTypesResolveTest.testDoubleSubtype line 76"
        ]
      },
      {
        "methodName": "testIssue603PrintStream",
        "error": "java.lang.StackOverflowError",
        "message": "",
        "fail_line": "",
        "test_source": "  public void testIssue603PrintStream() {\n  TypeAdapter<PrintStream> adapter = new Gson().getAdapter(PrintStream.class);\n  assertNotNull(adapter);\n  }",
        "stack": [
          "$Gson$Types.resolve line 378, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 362, ReflectiveTypeAdapterFactory.getBoundFields line 158, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423, ReflectiveTypeAdapterFactory.createBoundField line 115, ReflectiveTypeAdapterFactory.getBoundFields line 164, ReflectiveTypeAdapterFactory.create line 100, Gson.getAdapter line 423"
        ]
      },
      {
        "methodName": "testSuperSubtype",
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<?> but was:<? super ? extends java.lang.Number>",
        "fail_line": "    assertEquals($Gson$Types.subtypeOf(Object.class),",
        "test_source": "  public void testSuperSubtype() {\n  assertEquals($Gson$Types.subtypeOf(Object.class),\n  $Gson$Types.supertypeOf($Gson$Types.subtypeOf(Number.class)));\n  }",
        "stack": [
          "RecursiveTypesResolveTest.testSuperSubtype line 81"
        ]
      },
      {
        "methodName": "testRecursiveResolveSimple",
        "error": "java.lang.StackOverflowError",
        "message": "",
        "fail_line": "",
        "test_source": "  public void testRecursiveResolveSimple() {\n  TypeAdapter<Foo1> adapter = new Gson().getAdapter(Foo1.class);\n  assertNotNull(adapter);\n  }",
        "stack": [
          "$Gson$Types.declaringClassOf line 431, $Gson$Types.resolveTypeVariable line 401, $Gson$Types.resolve line 333, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387, $Gson$Types.resolve line 382, $Gson$Types.resolve line 387"
        ]
      }
    ]
  },
  "classes": [
    {
      "name": "com/google/gson/internal/$Gson$Types.java",
      "buggy_full_code": "\n\npackage com.google.gson.internal;\n\nimport java.io.Serializable;\nimport java.lang.reflect.Array;\nimport java.lang.reflect.GenericArrayType;\nimport java.lang.reflect.GenericDeclaration;\nimport java.lang.reflect.Modifier;\nimport java.lang.reflect.ParameterizedType;\nimport java.lang.reflect.Type;\nimport java.lang.reflect.TypeVariable;\nimport java.lang.reflect.WildcardType;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Map;\nimport java.util.NoSuchElementException;\nimport java.util.Properties;\n\nimport static com.google.gson.internal.$Gson$Preconditions.checkArgument; import static com.google.gson.internal.$Gson$Preconditions.checkNotNull; public final class $Gson$Types { static final Type[] EMPTY_TYPE_ARRAY = new Type[] {}; private $Gson$Types() {\n    throw new UnsupportedOperationException();\n  }\n\n  \n  public static ParameterizedType newParameterizedTypeWithOwner( Type ownerType, Type rawType, Type... typeArguments) {\n    return new ParameterizedTypeImpl(ownerType, rawType, typeArguments);\n  }\n\n  \n  public static GenericArrayType arrayOf(Type componentType) {\n    return new GenericArrayTypeImpl(componentType);\n  }\n\n  \n  public static WildcardType subtypeOf(Type bound) {\n    Type[] upperBounds;\n      upperBounds = new Type[] { bound };\n    return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);\n  }\n\n  \n  public static WildcardType supertypeOf(Type bound) {\n    Type[] lowerBounds;\n      lowerBounds = new Type[] { bound };\n    return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);\n  }\n\n  \n  public static Type canonicalize(Type type) {\n    if (type instanceof Class) {\n      Class<?> c = (Class<?>) type;\n      return c.isArray() ? new GenericArrayTypeImpl(canonicalize(c.getComponentType())) : c;\n\n    } else if (type instanceof ParameterizedType) {\n      ParameterizedType p = (ParameterizedType) type;\n      return new ParameterizedTypeImpl(p.getOwnerType(),\n          p.getRawType(), p.getActualTypeArguments());\n\n    } else if (type instanceof GenericArrayType) {\n      GenericArrayType g = (GenericArrayType) type;\n      return new GenericArrayTypeImpl(g.getGenericComponentType());\n\n    } else if (type instanceof WildcardType) {\n      WildcardType w = (WildcardType) type;\n      return new WildcardTypeImpl(w.getUpperBounds(), w.getLowerBounds());\n\n    } else {\n      \n      return type;\n    }\n  }\n\n  public static Class<?> getRawType(Type type) {\n    if (type instanceof Class<?>) {\n      \n      return (Class<?>) type;\n\n    } else if (type instanceof ParameterizedType) {\n      ParameterizedType parameterizedType = (ParameterizedType) type;\n\n      \n      \n      \n      Type rawType = parameterizedType.getRawType();\n      checkArgument(rawType instanceof Class);\n      return (Class<?>) rawType;\n\n    } else if (type instanceof GenericArrayType) {\n      Type componentType = ((GenericArrayType)type).getGenericComponentType();\n      return Array.newInstance(getRawType(componentType), 0).getClass();\n\n    } else if (type instanceof TypeVariable) {\n      \n      \n      return Object.class;\n\n    } else if (type instanceof WildcardType) {\n      return getRawType(((WildcardType) type).getUpperBounds()[0]);\n\n    } else {\n      String className = type == null ? \"null\" : type.getClass().getName();\n      throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \"\n          + \"GenericArrayType, but <\" + type + \"> is of type \" + className);\n    }\n  }\n\n  static boolean equal(Object a, Object b) {\n    return a == b || (a != null && a.equals(b));\n  }\n\n  \n  public static boolean equals(Type a, Type b) {\n    if (a == b) {\n      \n      return true;\n\n    } else if (a instanceof Class) {\n      \n      return a.equals(b);\n\n    } else if (a instanceof ParameterizedType) {\n      if (!(b instanceof ParameterizedType)) {\n        return false;\n      }\n\n      \n      ParameterizedType pa = (ParameterizedType) a;\n      ParameterizedType pb = (ParameterizedType) b;\n      return equal(pa.getOwnerType(), pb.getOwnerType())\n          && pa.getRawType().equals(pb.getRawType())\n          && Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments());\n\n    } else if (a instanceof GenericArrayType) {\n      if (!(b instanceof GenericArrayType)) {\n        return false;\n      }\n\n      GenericArrayType ga = (GenericArrayType) a;\n      GenericArrayType gb = (GenericArrayType) b;\n      return equals(ga.getGenericComponentType(), gb.getGenericComponentType());\n\n    } else if (a instanceof WildcardType) {\n      if (!(b instanceof WildcardType)) {\n        return false;\n      }\n\n      WildcardType wa = (WildcardType) a;\n      WildcardType wb = (WildcardType) b;\n      return Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())\n          && Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds());\n\n    } else if (a instanceof TypeVariable) {\n      if (!(b instanceof TypeVariable)) {\n        return false;\n      }\n      TypeVariable<?> va = (TypeVariable<?>) a;\n      TypeVariable<?> vb = (TypeVariable<?>) b;\n      return va.getGenericDeclaration() == vb.getGenericDeclaration()\n          && va.getName().equals(vb.getName());\n\n    } else {\n      \n      return false;\n    }\n  }\n\n  static int hashCodeOrZero(Object o) {\n    return o != null ? o.hashCode() : 0;\n  }\n\n  public static String typeToString(Type type) {\n    return type instanceof Class ? ((Class<?>) type).getName() : type.toString();\n  }\n\n  \n  static Type getGenericSupertype(Type context, Class<?> rawType, Class<?> toResolve) {\n    if (toResolve == rawType) {\n      return context;\n    }\n\n    \n    if (toResolve.isInterface()) {\n      Class<?>[] interfaces = rawType.getInterfaces();\n      for (int i = 0, length = interfaces.length; i < length; i++) {\n        if (interfaces[i] == toResolve) {\n          return rawType.getGenericInterfaces()[i];\n        } else if (toResolve.isAssignableFrom(interfaces[i])) {\n          return getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);\n        }\n      }\n    }\n\n    \n    if (!rawType.isInterface()) {\n      while (rawType != Object.class) {\n        Class<?> rawSupertype = rawType.getSuperclass();\n        if (rawSupertype == toResolve) {\n          return rawType.getGenericSuperclass();\n        } else if (toResolve.isAssignableFrom(rawSupertype)) {\n          return getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n        }\n        rawType = rawSupertype;\n      }\n    }\n\n    \n    return toResolve;\n  }\n\n  \n  static Type getSupertype(Type context, Class<?> contextRawType, Class<?> supertype) {\n    checkArgument(supertype.isAssignableFrom(contextRawType));\n    return resolve(context, contextRawType,\n        $Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n  }\n\n  \n  public static Type getArrayComponentType(Type array) {\n    return array instanceof GenericArrayType\n        ? ((GenericArrayType) array).getGenericComponentType()\n        : ((Class<?>) array).getComponentType();\n  }\n\n  \n  public static Type getCollectionElementType(Type context, Class<?> contextRawType) {\n    Type collectionType = getSupertype(context, contextRawType, Collection.class);\n\n    if (collectionType instanceof WildcardType) {\n      collectionType = ((WildcardType)collectionType).getUpperBounds()[0];\n    }\n    if (collectionType instanceof ParameterizedType) {\n      return ((ParameterizedType) collectionType).getActualTypeArguments()[0];\n    }\n    return Object.class;\n  }\n\n  \n  public static Type[] getMapKeyAndValueTypes(Type context, Class<?> contextRawType) {\n    \n    if (context == Properties.class) {\n      return new Type[] { String.class, String.class }; \n    }\n\n    Type mapType = getSupertype(context, contextRawType, Map.class);\n    \n    if (mapType instanceof ParameterizedType) {\n      ParameterizedType mapParameterizedType = (ParameterizedType) mapType;\n      return mapParameterizedType.getActualTypeArguments();\n    }\n    return new Type[] { Object.class, Object.class };\n  }\n\n  public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {\n    \n    while (true) {\n      if (toResolve instanceof TypeVariable) {\n        TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;\n        toResolve = resolveTypeVariable(context, contextRawType, typeVariable);\n        if (toResolve == typeVariable) {\n          return toResolve;\n        }\n\n      } else if (toResolve instanceof Class && ((Class<?>) toResolve).isArray()) {\n        Class<?> original = (Class<?>) toResolve;\n        Type componentType = original.getComponentType();\n        Type newComponentType = resolve(context, contextRawType, componentType);\n        return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);\n\n      } else if (toResolve instanceof GenericArrayType) {\n        GenericArrayType original = (GenericArrayType) toResolve;\n        Type componentType = original.getGenericComponentType();\n        Type newComponentType = resolve(context, contextRawType, componentType);\n        return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);\n\n      } else if (toResolve instanceof ParameterizedType) {\n        ParameterizedType original = (ParameterizedType) toResolve;\n        Type ownerType = original.getOwnerType();\n        Type newOwnerType = resolve(context, contextRawType, ownerType);\n        boolean changed = newOwnerType != ownerType;\n\n        Type[] args = original.getActualTypeArguments();\n        for (int t = 0, length = args.length; t < length; t++) {\n          Type resolvedTypeArgument = resolve(context, contextRawType, args[t]);\n          if (resolvedTypeArgument != args[t]) {\n            if (!changed) {\n              args = args.clone();\n              changed = true;\n            }\n            args[t] = resolvedTypeArgument;\n          }\n        }\n\n        return changed\n            ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)\n            : original;\n\n      } else if (toResolve instanceof WildcardType) {\n        WildcardType original = (WildcardType) toResolve;\n        Type[] originalLowerBound = original.getLowerBounds();\n        Type[] originalUpperBound = original.getUpperBounds();\n\n        if (originalLowerBound.length == 1) {\n          Type lowerBound = resolve(context, contextRawType, originalLowerBound[0]);\n          if (lowerBound != originalLowerBound[0]) {\n            return supertypeOf(lowerBound);\n          }\n        } else if (originalUpperBound.length == 1) {\n          Type upperBound = resolve(context, contextRawType, originalUpperBound[0]);\n          if (upperBound != originalUpperBound[0]) {\n            return subtypeOf(upperBound);\n          }\n        }\n        return original;\n\n      } else {\n        return toResolve;\n      }\n    }\n  }\n\n  static Type resolveTypeVariable(Type context, Class<?> contextRawType, TypeVariable<?> unknown) {\n    Class<?> declaredByRaw = declaringClassOf(unknown);\n\n    \n    if (declaredByRaw == null) {\n      return unknown;\n    }\n\n    Type declaredBy = getGenericSupertype(context, contextRawType, declaredByRaw);\n    if (declaredBy instanceof ParameterizedType) {\n      int index = indexOf(declaredByRaw.getTypeParameters(), unknown);\n      return ((ParameterizedType) declaredBy).getActualTypeArguments()[index];\n    }\n\n    return unknown;\n  }\n\n  private static int indexOf(Object[] array, Object toFind) {\n    for (int i = 0, length = array.length; i < length; i++) {\n      if (toFind.equals(array[i])) {\n        return i;\n      }\n    }\n    throw new NoSuchElementException();\n  }\n\n  \n  private static Class<?> declaringClassOf(TypeVariable<?> typeVariable) {\n    GenericDeclaration genericDeclaration = typeVariable.getGenericDeclaration();\n    return genericDeclaration instanceof Class\n        ? (Class<?>) genericDeclaration\n        : null;\n  }\n\n  static void checkNotPrimitive(Type type) {\n    checkArgument(!(type instanceof Class<?>) || !((Class<?>) type).isPrimitive());\n  }\n\n  private static final class ParameterizedTypeImpl implements ParameterizedType, Serializable { private final Type ownerType; private final Type rawType; private final Type[] typeArguments; public ParameterizedTypeImpl(Type ownerType, Type rawType, Type... typeArguments) {\n      \n      if (rawType instanceof Class<?>) {\n        Class<?> rawTypeAsClass = (Class<?>) rawType;\n        boolean isStaticOrTopLevelClass = Modifier.isStatic(rawTypeAsClass.getModifiers())\n            || rawTypeAsClass.getEnclosingClass() == null;\n        checkArgument(ownerType != null || isStaticOrTopLevelClass);\n      }\n\n      this.ownerType = ownerType == null ? null : canonicalize(ownerType);\n      this.rawType = canonicalize(rawType);\n      this.typeArguments = typeArguments.clone();\n      for (int t = 0, length = this.typeArguments.length; t < length; t++) {\n        checkNotNull(this.typeArguments[t]);\n        checkNotPrimitive(this.typeArguments[t]);\n        this.typeArguments[t] = canonicalize(this.typeArguments[t]);\n      }\n    }\n\n    public Type[] getActualTypeArguments() {\n      return typeArguments.clone();\n    }\n\n    public Type getRawType() {\n      return rawType;\n    }\n\n    public Type getOwnerType() {\n      return ownerType;\n    }\n\n    @Override public boolean equals(Object other) {\n      return other instanceof ParameterizedType\n          && $Gson$Types.equals(this, (ParameterizedType) other);\n    }\n\n    @Override public int hashCode() {\n      return Arrays.hashCode(typeArguments)\n          ^ rawType.hashCode()\n          ^ hashCodeOrZero(ownerType);\n    }\n\n    @Override public String toString() {\n      int length = typeArguments.length;\n      if (length == 0) {\n        return typeToString(rawType);\n      }\n\n      StringBuilder stringBuilder = new StringBuilder(30 * (length + 1));\n      stringBuilder.append(typeToString(rawType)).append(\"<\").append(typeToString(typeArguments[0]));\n      for (int i = 1; i < length; i++) {\n        stringBuilder.append(\", \").append(typeToString(typeArguments[i]));\n      }\n      return stringBuilder.append(\">\").toString();\n    }\n\n    private static final long serialVersionUID = 0; } private static final class GenericArrayTypeImpl implements GenericArrayType, Serializable { private final Type componentType; public GenericArrayTypeImpl(Type componentType) {\n      this.componentType = canonicalize(componentType);\n    }\n\n    public Type getGenericComponentType() {\n      return componentType;\n    }\n\n    @Override public boolean equals(Object o) {\n      return o instanceof GenericArrayType\n          && $Gson$Types.equals(this, (GenericArrayType) o);\n    }\n\n    @Override public int hashCode() {\n      return componentType.hashCode();\n    }\n\n    @Override public String toString() {\n      return typeToString(componentType) + \"[]\";\n    }\n\n    private static final long serialVersionUID = 0; } private static final class WildcardTypeImpl implements WildcardType, Serializable { private final Type upperBound; private final Type lowerBound; public WildcardTypeImpl(Type[] upperBounds, Type[] lowerBounds) {\n      checkArgument(lowerBounds.length <= 1);\n      checkArgument(upperBounds.length == 1);\n\n      if (lowerBounds.length == 1) {\n        checkNotNull(lowerBounds[0]);\n        checkNotPrimitive(lowerBounds[0]);\n        checkArgument(upperBounds[0] == Object.class);\n        this.lowerBound = canonicalize(lowerBounds[0]);\n        this.upperBound = Object.class;\n\n      } else {\n        checkNotNull(upperBounds[0]);\n        checkNotPrimitive(upperBounds[0]);\n        this.lowerBound = null;\n        this.upperBound = canonicalize(upperBounds[0]);\n      }\n    }\n\n    public Type[] getUpperBounds() {\n      return new Type[] { upperBound };\n    }\n\n    public Type[] getLowerBounds() {\n      return lowerBound != null ? new Type[] { lowerBound } : EMPTY_TYPE_ARRAY;\n    }\n\n    @Override public boolean equals(Object other) {\n      return other instanceof WildcardType\n          && $Gson$Types.equals(this, (WildcardType) other);\n    }\n\n    @Override public int hashCode() {\n      \n      return (lowerBound != null ? 31 + lowerBound.hashCode() : 1)\n          ^ (31 + upperBound.hashCode());\n    }\n\n    @Override public String toString() {\n      if (lowerBound != null) {\n        return \"? super \" + typeToString(lowerBound);\n      } else if (upperBound == Object.class) {\n        return \"?\";\n      } else {\n        return \"? extends \" + typeToString(upperBound);\n      }\n    }\n\n    private static final long serialVersionUID = 0;\n  }\n}\n",
      "fixed_full_code": "\n\npackage com.google.gson.internal;\n\nimport java.io.Serializable;\nimport java.lang.reflect.Array;\nimport java.lang.reflect.GenericArrayType;\nimport java.lang.reflect.GenericDeclaration;\nimport java.lang.reflect.Modifier;\nimport java.lang.reflect.ParameterizedType;\nimport java.lang.reflect.Type;\nimport java.lang.reflect.TypeVariable;\nimport java.lang.reflect.WildcardType;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Map;\nimport java.util.NoSuchElementException;\nimport java.util.Properties;\n\nimport static com.google.gson.internal.$Gson$Preconditions.checkArgument; import static com.google.gson.internal.$Gson$Preconditions.checkNotNull; public final class $Gson$Types { static final Type[] EMPTY_TYPE_ARRAY = new Type[] {}; private $Gson$Types() {\n    throw new UnsupportedOperationException();\n  }\n\n  \n  public static ParameterizedType newParameterizedTypeWithOwner( Type ownerType, Type rawType, Type... typeArguments) {\n    return new ParameterizedTypeImpl(ownerType, rawType, typeArguments);\n  }\n\n  \n  public static GenericArrayType arrayOf(Type componentType) {\n    return new GenericArrayTypeImpl(componentType);\n  }\n\n  \n  public static WildcardType subtypeOf(Type bound) {\n    Type[] upperBounds;\n    if (bound instanceof WildcardType) {\n      upperBounds = ((WildcardType) bound).getUpperBounds();\n    } else {\n      upperBounds = new Type[] { bound };\n    }\n    return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);\n  }\n\n  \n  public static WildcardType supertypeOf(Type bound) {\n    Type[] lowerBounds;\n    if (bound instanceof WildcardType) {\n      lowerBounds = ((WildcardType) bound).getLowerBounds();\n    } else {\n      lowerBounds = new Type[] { bound };\n    }\n    return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);\n  }\n\n  \n  public static Type canonicalize(Type type) {\n    if (type instanceof Class) {\n      Class<?> c = (Class<?>) type;\n      return c.isArray() ? new GenericArrayTypeImpl(canonicalize(c.getComponentType())) : c;\n\n    } else if (type instanceof ParameterizedType) {\n      ParameterizedType p = (ParameterizedType) type;\n      return new ParameterizedTypeImpl(p.getOwnerType(),\n          p.getRawType(), p.getActualTypeArguments());\n\n    } else if (type instanceof GenericArrayType) {\n      GenericArrayType g = (GenericArrayType) type;\n      return new GenericArrayTypeImpl(g.getGenericComponentType());\n\n    } else if (type instanceof WildcardType) {\n      WildcardType w = (WildcardType) type;\n      return new WildcardTypeImpl(w.getUpperBounds(), w.getLowerBounds());\n\n    } else {\n      \n      return type;\n    }\n  }\n\n  public static Class<?> getRawType(Type type) {\n    if (type instanceof Class<?>) {\n      \n      return (Class<?>) type;\n\n    } else if (type instanceof ParameterizedType) {\n      ParameterizedType parameterizedType = (ParameterizedType) type;\n\n      \n      \n      \n      Type rawType = parameterizedType.getRawType();\n      checkArgument(rawType instanceof Class);\n      return (Class<?>) rawType;\n\n    } else if (type instanceof GenericArrayType) {\n      Type componentType = ((GenericArrayType)type).getGenericComponentType();\n      return Array.newInstance(getRawType(componentType), 0).getClass();\n\n    } else if (type instanceof TypeVariable) {\n      \n      \n      return Object.class;\n\n    } else if (type instanceof WildcardType) {\n      return getRawType(((WildcardType) type).getUpperBounds()[0]);\n\n    } else {\n      String className = type == null ? \"null\" : type.getClass().getName();\n      throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \"\n          + \"GenericArrayType, but <\" + type + \"> is of type \" + className);\n    }\n  }\n\n  static boolean equal(Object a, Object b) {\n    return a == b || (a != null && a.equals(b));\n  }\n\n  \n  public static boolean equals(Type a, Type b) {\n    if (a == b) {\n      \n      return true;\n\n    } else if (a instanceof Class) {\n      \n      return a.equals(b);\n\n    } else if (a instanceof ParameterizedType) {\n      if (!(b instanceof ParameterizedType)) {\n        return false;\n      }\n\n      \n      ParameterizedType pa = (ParameterizedType) a;\n      ParameterizedType pb = (ParameterizedType) b;\n      return equal(pa.getOwnerType(), pb.getOwnerType())\n          && pa.getRawType().equals(pb.getRawType())\n          && Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments());\n\n    } else if (a instanceof GenericArrayType) {\n      if (!(b instanceof GenericArrayType)) {\n        return false;\n      }\n\n      GenericArrayType ga = (GenericArrayType) a;\n      GenericArrayType gb = (GenericArrayType) b;\n      return equals(ga.getGenericComponentType(), gb.getGenericComponentType());\n\n    } else if (a instanceof WildcardType) {\n      if (!(b instanceof WildcardType)) {\n        return false;\n      }\n\n      WildcardType wa = (WildcardType) a;\n      WildcardType wb = (WildcardType) b;\n      return Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())\n          && Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds());\n\n    } else if (a instanceof TypeVariable) {\n      if (!(b instanceof TypeVariable)) {\n        return false;\n      }\n      TypeVariable<?> va = (TypeVariable<?>) a;\n      TypeVariable<?> vb = (TypeVariable<?>) b;\n      return va.getGenericDeclaration() == vb.getGenericDeclaration()\n          && va.getName().equals(vb.getName());\n\n    } else {\n      \n      return false;\n    }\n  }\n\n  static int hashCodeOrZero(Object o) {\n    return o != null ? o.hashCode() : 0;\n  }\n\n  public static String typeToString(Type type) {\n    return type instanceof Class ? ((Class<?>) type).getName() : type.toString();\n  }\n\n  \n  static Type getGenericSupertype(Type context, Class<?> rawType, Class<?> toResolve) {\n    if (toResolve == rawType) {\n      return context;\n    }\n\n    \n    if (toResolve.isInterface()) {\n      Class<?>[] interfaces = rawType.getInterfaces();\n      for (int i = 0, length = interfaces.length; i < length; i++) {\n        if (interfaces[i] == toResolve) {\n          return rawType.getGenericInterfaces()[i];\n        } else if (toResolve.isAssignableFrom(interfaces[i])) {\n          return getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);\n        }\n      }\n    }\n\n    \n    if (!rawType.isInterface()) {\n      while (rawType != Object.class) {\n        Class<?> rawSupertype = rawType.getSuperclass();\n        if (rawSupertype == toResolve) {\n          return rawType.getGenericSuperclass();\n        } else if (toResolve.isAssignableFrom(rawSupertype)) {\n          return getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n        }\n        rawType = rawSupertype;\n      }\n    }\n\n    \n    return toResolve;\n  }\n\n  \n  static Type getSupertype(Type context, Class<?> contextRawType, Class<?> supertype) {\n    checkArgument(supertype.isAssignableFrom(contextRawType));\n    return resolve(context, contextRawType,\n        $Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n  }\n\n  \n  public static Type getArrayComponentType(Type array) {\n    return array instanceof GenericArrayType\n        ? ((GenericArrayType) array).getGenericComponentType()\n        : ((Class<?>) array).getComponentType();\n  }\n\n  \n  public static Type getCollectionElementType(Type context, Class<?> contextRawType) {\n    Type collectionType = getSupertype(context, contextRawType, Collection.class);\n\n    if (collectionType instanceof WildcardType) {\n      collectionType = ((WildcardType)collectionType).getUpperBounds()[0];\n    }\n    if (collectionType instanceof ParameterizedType) {\n      return ((ParameterizedType) collectionType).getActualTypeArguments()[0];\n    }\n    return Object.class;\n  }\n\n  \n  public static Type[] getMapKeyAndValueTypes(Type context, Class<?> contextRawType) {\n    \n    if (context == Properties.class) {\n      return new Type[] { String.class, String.class }; \n    }\n\n    Type mapType = getSupertype(context, contextRawType, Map.class);\n    \n    if (mapType instanceof ParameterizedType) {\n      ParameterizedType mapParameterizedType = (ParameterizedType) mapType;\n      return mapParameterizedType.getActualTypeArguments();\n    }\n    return new Type[] { Object.class, Object.class };\n  }\n\n  public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {\n    \n    while (true) {\n      if (toResolve instanceof TypeVariable) {\n        TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;\n        toResolve = resolveTypeVariable(context, contextRawType, typeVariable);\n        if (toResolve == typeVariable) {\n          return toResolve;\n        }\n\n      } else if (toResolve instanceof Class && ((Class<?>) toResolve).isArray()) {\n        Class<?> original = (Class<?>) toResolve;\n        Type componentType = original.getComponentType();\n        Type newComponentType = resolve(context, contextRawType, componentType);\n        return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);\n\n      } else if (toResolve instanceof GenericArrayType) {\n        GenericArrayType original = (GenericArrayType) toResolve;\n        Type componentType = original.getGenericComponentType();\n        Type newComponentType = resolve(context, contextRawType, componentType);\n        return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);\n\n      } else if (toResolve instanceof ParameterizedType) {\n        ParameterizedType original = (ParameterizedType) toResolve;\n        Type ownerType = original.getOwnerType();\n        Type newOwnerType = resolve(context, contextRawType, ownerType);\n        boolean changed = newOwnerType != ownerType;\n\n        Type[] args = original.getActualTypeArguments();\n        for (int t = 0, length = args.length; t < length; t++) {\n          Type resolvedTypeArgument = resolve(context, contextRawType, args[t]);\n          if (resolvedTypeArgument != args[t]) {\n            if (!changed) {\n              args = args.clone();\n              changed = true;\n            }\n            args[t] = resolvedTypeArgument;\n          }\n        }\n\n        return changed\n            ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)\n            : original;\n\n      } else if (toResolve instanceof WildcardType) {\n        WildcardType original = (WildcardType) toResolve;\n        Type[] originalLowerBound = original.getLowerBounds();\n        Type[] originalUpperBound = original.getUpperBounds();\n\n        if (originalLowerBound.length == 1) {\n          Type lowerBound = resolve(context, contextRawType, originalLowerBound[0]);\n          if (lowerBound != originalLowerBound[0]) {\n            return supertypeOf(lowerBound);\n          }\n        } else if (originalUpperBound.length == 1) {\n          Type upperBound = resolve(context, contextRawType, originalUpperBound[0]);\n          if (upperBound != originalUpperBound[0]) {\n            return subtypeOf(upperBound);\n          }\n        }\n        return original;\n\n      } else {\n        return toResolve;\n      }\n    }\n  }\n\n  static Type resolveTypeVariable(Type context, Class<?> contextRawType, TypeVariable<?> unknown) {\n    Class<?> declaredByRaw = declaringClassOf(unknown);\n\n    \n    if (declaredByRaw == null) {\n      return unknown;\n    }\n\n    Type declaredBy = getGenericSupertype(context, contextRawType, declaredByRaw);\n    if (declaredBy instanceof ParameterizedType) {\n      int index = indexOf(declaredByRaw.getTypeParameters(), unknown);\n      return ((ParameterizedType) declaredBy).getActualTypeArguments()[index];\n    }\n\n    return unknown;\n  }\n\n  private static int indexOf(Object[] array, Object toFind) {\n    for (int i = 0, length = array.length; i < length; i++) {\n      if (toFind.equals(array[i])) {\n        return i;\n      }\n    }\n    throw new NoSuchElementException();\n  }\n\n  \n  private static Class<?> declaringClassOf(TypeVariable<?> typeVariable) {\n    GenericDeclaration genericDeclaration = typeVariable.getGenericDeclaration();\n    return genericDeclaration instanceof Class\n        ? (Class<?>) genericDeclaration\n        : null;\n  }\n\n  static void checkNotPrimitive(Type type) {\n    checkArgument(!(type instanceof Class<?>) || !((Class<?>) type).isPrimitive());\n  }\n\n  private static final class ParameterizedTypeImpl implements ParameterizedType, Serializable { private final Type ownerType; private final Type rawType; private final Type[] typeArguments; public ParameterizedTypeImpl(Type ownerType, Type rawType, Type... typeArguments) {\n      \n      if (rawType instanceof Class<?>) {\n        Class<?> rawTypeAsClass = (Class<?>) rawType;\n        boolean isStaticOrTopLevelClass = Modifier.isStatic(rawTypeAsClass.getModifiers())\n            || rawTypeAsClass.getEnclosingClass() == null;\n        checkArgument(ownerType != null || isStaticOrTopLevelClass);\n      }\n\n      this.ownerType = ownerType == null ? null : canonicalize(ownerType);\n      this.rawType = canonicalize(rawType);\n      this.typeArguments = typeArguments.clone();\n      for (int t = 0, length = this.typeArguments.length; t < length; t++) {\n        checkNotNull(this.typeArguments[t]);\n        checkNotPrimitive(this.typeArguments[t]);\n        this.typeArguments[t] = canonicalize(this.typeArguments[t]);\n      }\n    }\n\n    public Type[] getActualTypeArguments() {\n      return typeArguments.clone();\n    }\n\n    public Type getRawType() {\n      return rawType;\n    }\n\n    public Type getOwnerType() {\n      return ownerType;\n    }\n\n    @Override public boolean equals(Object other) {\n      return other instanceof ParameterizedType\n          && $Gson$Types.equals(this, (ParameterizedType) other);\n    }\n\n    @Override public int hashCode() {\n      return Arrays.hashCode(typeArguments)\n          ^ rawType.hashCode()\n          ^ hashCodeOrZero(ownerType);\n    }\n\n    @Override public String toString() {\n      int length = typeArguments.length;\n      if (length == 0) {\n        return typeToString(rawType);\n      }\n\n      StringBuilder stringBuilder = new StringBuilder(30 * (length + 1));\n      stringBuilder.append(typeToString(rawType)).append(\"<\").append(typeToString(typeArguments[0]));\n      for (int i = 1; i < length; i++) {\n        stringBuilder.append(\", \").append(typeToString(typeArguments[i]));\n      }\n      return stringBuilder.append(\">\").toString();\n    }\n\n    private static final long serialVersionUID = 0; } private static final class GenericArrayTypeImpl implements GenericArrayType, Serializable { private final Type componentType; public GenericArrayTypeImpl(Type componentType) {\n      this.componentType = canonicalize(componentType);\n    }\n\n    public Type getGenericComponentType() {\n      return componentType;\n    }\n\n    @Override public boolean equals(Object o) {\n      return o instanceof GenericArrayType\n          && $Gson$Types.equals(this, (GenericArrayType) o);\n    }\n\n    @Override public int hashCode() {\n      return componentType.hashCode();\n    }\n\n    @Override public String toString() {\n      return typeToString(componentType) + \"[]\";\n    }\n\n    private static final long serialVersionUID = 0; } private static final class WildcardTypeImpl implements WildcardType, Serializable { private final Type upperBound; private final Type lowerBound; public WildcardTypeImpl(Type[] upperBounds, Type[] lowerBounds) {\n      checkArgument(lowerBounds.length <= 1);\n      checkArgument(upperBounds.length == 1);\n\n      if (lowerBounds.length == 1) {\n        checkNotNull(lowerBounds[0]);\n        checkNotPrimitive(lowerBounds[0]);\n        checkArgument(upperBounds[0] == Object.class);\n        this.lowerBound = canonicalize(lowerBounds[0]);\n        this.upperBound = Object.class;\n\n      } else {\n        checkNotNull(upperBounds[0]);\n        checkNotPrimitive(upperBounds[0]);\n        this.lowerBound = null;\n        this.upperBound = canonicalize(upperBounds[0]);\n      }\n    }\n\n    public Type[] getUpperBounds() {\n      return new Type[] { upperBound };\n    }\n\n    public Type[] getLowerBounds() {\n      return lowerBound != null ? new Type[] { lowerBound } : EMPTY_TYPE_ARRAY;\n    }\n\n    @Override public boolean equals(Object other) {\n      return other instanceof WildcardType\n          && $Gson$Types.equals(this, (WildcardType) other);\n    }\n\n    @Override public int hashCode() {\n      \n      return (lowerBound != null ? 31 + lowerBound.hashCode() : 1)\n          ^ (31 + upperBound.hashCode());\n    }\n\n    @Override public String toString() {\n      if (lowerBound != null) {\n        return \"? super \" + typeToString(lowerBound);\n      } else if (upperBound == Object.class) {\n        return \"?\";\n      } else {\n        return \"? extends \" + typeToString(upperBound);\n      }\n    }\n\n    private static final long serialVersionUID = 0;\n  }\n}\n",
      "buggy_signatures": [
        "public static ParameterizedType newParameterizedTypeWithOwner( Type ownerType, Type rawType, Type... typeArguments)",
        "public static GenericArrayType arrayOf(Type componentType)",
        "public static WildcardType subtypeOf(Type bound)",
        "public static WildcardType supertypeOf(Type bound)",
        "public static Type canonicalize(Type type)",
        "public static Class<?> getRawType(Type type)",
        "static boolean equal(Object a, Object b)",
        "public static boolean equals(Type a, Type b)",
        "static int hashCodeOrZero(Object o)",
        "public static String typeToString(Type type)",
        "static Type getGenericSupertype(Type context, Class<?> rawType, Class<?> toResolve)",
        "static Type getSupertype(Type context, Class<?> contextRawType, Class<?> supertype)",
        "public static Type getArrayComponentType(Type array)",
        "public static Type getCollectionElementType(Type context, Class<?> contextRawType)",
        "public static Type[] getMapKeyAndValueTypes(Type context, Class<?> contextRawType)",
        "public static Type resolve(Type context, Class<?> contextRawType, Type toResolve)",
        "static Type resolveTypeVariable(Type context, Class<?> contextRawType, TypeVariable<?> unknown)",
        "private static int indexOf(Object[] array, Object toFind)",
        "private static Class<?> declaringClassOf(TypeVariable<?> typeVariable)",
        "static void checkNotPrimitive(Type type)",
        "private static final class ParameterizedTypeImpl implements ParameterizedType, Serializable { private final Type ownerType; private final Type rawType; private final Type[] typeArguments; public ParameterizedTypeImpl(Type ownerType, Type rawType, Type... typeArguments)",
        "public Type[] getActualTypeArguments()",
        "public Type getRawType()",
        "public Type getOwnerType()",
        "public boolean equals(Object other)",
        "public int hashCode()",
        "public String toString()",
        "public Type getGenericComponentType()",
        "public boolean equals(Object o)",
        "public int hashCode()",
        "public String toString()",
        "public Type[] getUpperBounds()",
        "public Type[] getLowerBounds()",
        "public boolean equals(Object other)",
        "public int hashCode()",
        "public String toString()"
      ],
      "fixed_signatures": [
        "public static ParameterizedType newParameterizedTypeWithOwner( Type ownerType, Type rawType, Type... typeArguments)",
        "public static GenericArrayType arrayOf(Type componentType)",
        "public static WildcardType subtypeOf(Type bound)",
        "public static WildcardType supertypeOf(Type bound)",
        "public static Type canonicalize(Type type)",
        "public static Class<?> getRawType(Type type)",
        "static boolean equal(Object a, Object b)",
        "public static boolean equals(Type a, Type b)",
        "static int hashCodeOrZero(Object o)",
        "public static String typeToString(Type type)",
        "static Type getGenericSupertype(Type context, Class<?> rawType, Class<?> toResolve)",
        "static Type getSupertype(Type context, Class<?> contextRawType, Class<?> supertype)",
        "public static Type getArrayComponentType(Type array)",
        "public static Type getCollectionElementType(Type context, Class<?> contextRawType)",
        "public static Type[] getMapKeyAndValueTypes(Type context, Class<?> contextRawType)",
        "public static Type resolve(Type context, Class<?> contextRawType, Type toResolve)",
        "static Type resolveTypeVariable(Type context, Class<?> contextRawType, TypeVariable<?> unknown)",
        "private static int indexOf(Object[] array, Object toFind)",
        "private static Class<?> declaringClassOf(TypeVariable<?> typeVariable)",
        "static void checkNotPrimitive(Type type)",
        "private static final class ParameterizedTypeImpl implements ParameterizedType, Serializable { private final Type ownerType; private final Type rawType; private final Type[] typeArguments; public ParameterizedTypeImpl(Type ownerType, Type rawType, Type... typeArguments)",
        "public Type[] getActualTypeArguments()",
        "public Type getRawType()",
        "public Type getOwnerType()",
        "public boolean equals(Object other)",
        "public int hashCode()",
        "public String toString()",
        "public Type getGenericComponentType()",
        "public boolean equals(Object o)",
        "public int hashCode()",
        "public String toString()",
        "public Type[] getUpperBounds()",
        "public Type[] getLowerBounds()",
        "public boolean equals(Object other)",
        "public int hashCode()",
        "public String toString()"
      ],
      "methods": [
        {
          "buggy_method": "  public static WildcardType subtypeOf(Type bound) {\n  Type[] upperBounds;\n  upperBounds = new Type[] { bound };\n  return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);\n  }",
          "fixed_method": "  public static WildcardType subtypeOf(Type bound) {\n  Type[] upperBounds;\n  if (bound instanceof WildcardType) {\n  upperBounds = ((WildcardType) bound).getUpperBounds();\n  } else {\n  upperBounds = new Type[] { bound };\n  }\n  return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);\n  }",
          "diff": [
            "@@ -76,7 +76,11 @@",
            "    */\n",
            "   public static WildcardType subtypeOf(Type bound) {\n",
            "     Type[] upperBounds;\n",
            "+    if (bound instanceof WildcardType) {\n",
            "+      upperBounds = ((WildcardType) bound).getUpperBounds();\n",
            "+    } else {\n",
            "       upperBounds = new Type[] { bound };\n",
            "+    }\n",
            "     return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);\n",
            "   }\n",
            " \n"
          ],
          "changed_lines": 4
        },
        {
          "buggy_method": "  public static WildcardType supertypeOf(Type bound) {\n  Type[] lowerBounds;\n  lowerBounds = new Type[] { bound };\n  return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);\n  }",
          "fixed_method": "  public static WildcardType supertypeOf(Type bound) {\n  Type[] lowerBounds;\n  if (bound instanceof WildcardType) {\n  lowerBounds = ((WildcardType) bound).getLowerBounds();\n  } else {\n  lowerBounds = new Type[] { bound };\n  }\n  return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);\n  }",
          "diff": [
            "@@ -87,7 +91,11 @@",
            "    */\n",
            "   public static WildcardType supertypeOf(Type bound) {\n",
            "     Type[] lowerBounds;\n",
            "+    if (bound instanceof WildcardType) {\n",
            "+      lowerBounds = ((WildcardType) bound).getLowerBounds();\n",
            "+    } else {\n",
            "       lowerBounds = new Type[] { bound };\n",
            "+    }\n",
            "     return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);\n",
            "   }\n",
            " \n"
          ],
          "changed_lines": 4
        }
      ]
    }
  ]
}
