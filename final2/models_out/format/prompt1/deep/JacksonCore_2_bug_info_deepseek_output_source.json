{
  "bug_id": "JacksonCore_2_bug_info",
  "results": [
    {
      "prompt_index": 1,
      "prompt": "IMPORTANT: You must reply _exactly_ in this form: \nRESPONSE: <fully-qualified-class-name>\n -and nothing else. No extra text, no newlines before/after, no explanations.Bug ID: 2\nTest Class: com.fasterxml.jackson.core.json.TestParserErrorHandling\nMethod: testMangledNumbersBytes\nError: junit.framework.AssertionFailedError\nMessage: Should have gotten an exception; instead got token: VALUE_NUMBER_INT\nFailing Line:         _testMangledNumbers(true);\nTest Source:\npublic void testMangledNumbersBytes() throws Exception {\n  _testMangledNumbers(true);\n  }\nStack Trace:\nTestParserErrorHandling._testMangledNumbers line 93, TestParserErrorHandling.testMangledNumbersBytes line 22\n\nMethod: testMangledNumbersChars\nError: junit.framework.AssertionFailedError\nMessage: Should have gotten an exception; instead got token: VALUE_NUMBER_INT\nFailing Line:         _testMangledNumbers(false);\nTest Source:\npublic void testMangledNumbersChars() throws Exception {\n  _testMangledNumbers(false);\n  }\nStack Trace:\nTestParserErrorHandling._testMangledNumbers line 93, TestParserErrorHandling.testMangledNumbersChars line 26\n\nReturn **only** the fully-qualified Java *source* class that contains the bug.\nDo **not** return:\n- the test class itself (e.g. com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeIdWithEnum1328Test),\n- any class whose simple name starts or ends with Test, Tests, TestUtil, TestUtils, or TestHelper,\n- any test-utility class such as org.junit.Assert or org.junit.jupiter.api.Assertions.\n",
      "response": "- any class that is not a source file.\n\nRESPONSE: com.fasterxml.jackson.core.json.TestParserErrorHandling"
    }
  ]
}